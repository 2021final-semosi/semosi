<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="review">

	<resultMap type="JobOfferReview" id="joReview">
		<result property="reviewNo" column="REVIEWNO" />
		<result property="reviewdPNo" column="REVIEWDPNO" />
		<result property="content" column="CONTENT" />
		<result property="grade" column="GRADE" />
		<result property="delYn" column="DELYN" />
		<result property="writeDate" column="WRITEDATE" />
		<association javaType="MemberS" property="memberS">
			<id property="membersNo" column="MEMBERSNO" />
			<result property="memberName" column="MEMBERNAME" />
			<result property="memberId" column="MEMBERID" />
		</association>
	</resultMap>

	<select id="getReviewCnt" resultType="int" parameterType="java.util.HashMap">
		select
		count(*) from JOB_OFFER_REVIEW
	</select>

	<select id="OfferReviewList" resultMap="joReview" parameterType="java.util.HashMap">
		SELECT
		jo.REVIEW_NO as reviewNo,
		s.MEMBER_ID as memberId,
		s.MEMBER_NAME
		as memberName,
		jo.CONTENT as content,
		jo.GRADE as grade,
		jo.WRITE_DATE as
		writeDate,
		jo.DEL_YN as delYn
		From(select Rank() over(order by review_NO
		DESC) as RNUM from JOB_OFFER_REVIEW), JOB_OFFER_REVIEW jo, member_s s
		WHERE WRITER_S_NO = s.MEMBERS_NO and
		<if test='category !=null and category != all and !keyword.equals("")'>
			<if test='category == "REVIEW_NO"'>
				jo.REVIEW_NO like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("member_id")'>
				s.MEMBER_ID like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("member_name")'>
				s.MEMBER_NAME like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("content")'>
				jo.content like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("grade")'>
				jo.grade like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("del_YN")'>
				<choose>
					<when test='keyword.equals("삭제")'>
						DEL_YN = 'Y' and
					</when>
					<otherwise>
						DEL_YN = 'N' and
					</otherwise>
				</choose>
			</if>
		</if>
		RNUM between #{start} and #{end}
	</select>

	<resultMap type="JobSearchReview" id="jsReview">
		<result property="reviewNo" column="REVIEWNO" />
		<result property="reviewdPNo" column="REVIEWDPNO" />
		<result property="content" column="CONTENT" />
		<result property="grade" column="GRADE" />
		<result property="delYn" column="DELYN" />
		<result property="writeDate" column="WRITEDATE" />
		<association javaType="MemberP" property="memberP">
			<id property="memberpNo" column="MEMBERPNO" />
			<result property="memberName" column="MEMBERNAME" />
			<result property="memberId" column="MEMBERID" />
		</association>
	</resultMap>

	<select id="getReviewCount" resultType="int" parameterType="java.util.HashMap">
		select count(*) from JOB_SEARCH_REVIEW
	</select>

	<select id="SearchReviewList" resultMap="jsReview" parameterType="java.util.HashMap">
		SELECT
		js.REVIEW_NO as reviewNo,
		p.MEMBER_ID as memberId,
		p.MEMBER_NAME as memberName,
		js.CONTENT as content,
		js.GRADE as grade,
		js.WRITE_DATE as
		writeDate,
		js.DEL_YN as delYn
		From(select Rank() over(order by review_NO DESC) as RNUM from JOB_SEARCH_REVIEW), JOB_SEARCH_REVIEW js, MEMBER_P p
		WHERE WRITER_P_NO = p.MEMBERP_NO and
		<if test='category !=null and category != all and !keyword.equals("")'>
			<if test='category == "REVIEW_NO"'>
				js.REVIEW_NO like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("member_id")'>
				p.MEMBER_ID like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("member_name")'>
				p.MEMBER_NAME like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("content")'>
				js.CONTENT like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("grade")'>
				js.GRADE like '%'||#{keyword}||'%' and
			</if>
			<if test='category.equals("del_YN")'>
				<choose>
					<when test='keyword.equals("삭제")'>
						js.DEL_YN = 'Y' and
					</when>
					<otherwise>
						js.DEL_YN = 'N' and
					</otherwise>
				</choose>
			</if>
		</if>
		RNUM between #{start} and #{end}
	</select>

	<resultMap type="ReviewAnswerMP" id="answermp">
		<result property="answerReviewNo" column="answerreviewno" />
		<result property="reviewSNo" column="reviewsno" />
		<result property="reviewPNo" column="reviewpno" />
		<result property="answerContent" column="answerContent" />
		<result property="delYN" column="DELYN" />
		<result property="writeDate" column="WRITEDATE" />
		<result property="writer" column="writer" />
		<result property="memberId" column="memberid" />
		<result property="memberName" column="membername" />
		<association javaType="JobOfferReview" property="jobReview">
			<id property="reviewNo" column="REVIEWNO" />
			<result property="content" column="content" />
		</association>
	</resultMap>

	<resultMap type="ReviewAnswerMS" id="answerms">
		<result property="answerReviewNo" column="answerreviewno" />
		<result property="reviewSNo" column="reviewsno" />
		<result property="reviewPNo" column="reviewpno" />
		<result property="answerContent" column="answerContent" />
		<result property="delYN" column="DELYN" />
		<result property="writeDate" column="WRITEDATE" />
		<result property="writer" column="writer" />
		<result property="memberId" column="memberid" />
		<result property="memberName" column="membername" />
		<association javaType="JobSearchReview" property="jobReview">
			<id property="reviewNo" column="REVIEWNO" />
			<result property="content" column="content" />
		</association>
	</resultMap>

	<select id="getReAnswerCount" resultType="int" parameterType="java.util.HashMap">
		select count(*) from Review_Answer
	</select>

	<sql id="answerms">
		SELECT
		ar.ANSWER_REVIEW_NO as answerReviewNo,
		ar.REVIEW_S_NO
		as reviewSNo,
		ar.REVIEW_P_NO as reviewPNo,
		ar.CONTENT as answerContent,
		ar.DEL_YN as delYN,
		ar.WRITER as writer,
		ar.WRITE_DATE as writeDate,
		ar.MEMBER_ID as memberId,
		ar.MEMBER_NAME as memberName,
		jo.CONTENT as
		content
		FROM ADMIN_REVIEW_ANSWER_MP ar JOIN JOB_OFFER_REVIEW jo ON ar.REVIEW_S_NO = jo.REVIEW_NO
		WHERE ar.REVIEW_P_NO IS NULL
	</sql>

	<sql id="answermp">
		SELECT
		rm.ANSWER_REVIEW_NO as answerReviewNo,
		rm.REVIEW_S_NO
		as reviewSNo,
		rm.REVIEW_P_NO as reviewPNo,
		rm.CONTENT as answerContent,
		rm.DEL_YN as delYN,
		rm.WRITER as writer,
		rm.WRITE_DATE as writeDate,
		rm.MEMBER_ID as memberId,
		rm.MEMBER_NAME as memberName,
		js.content as
		content
		FROM ADMIN_REVIEW_ANSWER_MS rm JOIN JOB_Search_review js ON rm.REVIEW_P_NO = js.REVIEW_NO
		WHERE rm.REVIEW_S_NO IS NULL
	</sql>

	<select id="reviewAnswerList" resultMap="answermp, answerms" parameterType="java.util.HashMap">
		<include refid="answerms"></include>
		union
		<include refid="answermp"></include>
	</select>

	<update id="answerDelYN">
		update review_answer set del_yn = #{delYn} where answer_review_no=#{answerReviewNo}
	</update>

	<update id="offerDelYN">
		update JOB_OFFER_REVIEW set del_yn = #{delYn} where review_no=#{reviewNo}
	</update>

	<update id="searchDelYN">
		update JOB_SEARCH_REVIEW set del_yn = #{delYn} where review_no=#{reviewNo}
	</update>

</mapper>
